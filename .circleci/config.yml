version: 2.1

executors:
  # define our execution environment
  py-exec:
    docker:
      - image: circleci/python:3.7.1
        environment:
          PIPENV_VENV_IN_PROJECT: true
          TEST_DATABASE_URL: postgresql://postgres@localhost/circle_test?sslmode=disable
      - image: circleci/postgres:11-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: circle
    working_directory: ~/pybuild


workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout_code
      - deps:
          requires:
            - checkout_code
      - tests:
          requires:
            - deps
      - lint:
          requires:
            - deps
      - type_checks:
          requires:
            - deps

jobs:
  # git clone
  checkout_code:
    executor: py-exec
    working_directory: ~/pybuild
    steps:
      - checkout
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/pybuild

  # run pipenv install and save the .venv dir
  deps:
    executor: py-exec
    steps:
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v2-dep-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            sudo pip install pipenv
            pipenv sync --bare --dev
      - save_cache: # cache Python dependencies using checksum of Pipfile as the cache-key
          key: v2-dep-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - "~/pybuild/.venv"

  # pytest
  tests:
    executor: py-exec
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v2-dep-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            mkdir test-reports
            pipenv run pytest --junitxml=test-reports/junit.xml
      - store_test_results:
          path: test-reports

  # mypy
  type_checks:
    executor: py-exec
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v2-dep-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            pipenv run mypy .

  # flake8
  lint:
    executor: py-exec
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v2-dep-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            pipenv run flake8
